name: Update Cronicle Version

on:
  schedule:
    # Verifica novos releases a cada 24 horas
    - cron: "0 */24 * * *"
  workflow_dispatch:

jobs:
  update-cronicle:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout usando PAT
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}

      # 2. Corrigir URL remota
      - name: Fix remote URL
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/Systemize-Brazil/cronicle-docker.git
          git remote -v

      # 3. Buscar última versão do Cronicle
      - name: Get latest Cronicle release
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/jhuckaby/Cronicle/releases/latest | jq -r '.tag_name')
          echo "latest_release=$LATEST_RELEASE" >> $GITHUB_ENV
          VERSION_NUMBER=$(echo "$LATEST_RELEASE" | sed 's/^v//')
          echo "version_number=$VERSION_NUMBER" >> $GITHUB_ENV

      # 4. Verificar se a tag já existe
      - name: Check if version already exists
        run: |
          if git rev-parse "v${{ env.version_number }}" >/dev/null 2>&1; then
            echo "Essa versão já existe. Encerrando o workflow."
            exit 0
          fi

      # 5. Atualizar Dockerfile
      - name: Update Dockerfile version
        run: |
          sed -i "s/^ENV CRONICLE_VERSION=.*/ENV CRONICLE_VERSION=${{ env.version_number }}/" ./docker/Dockerfile

      # 6. Configurar Git
      - name: Configure Git
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"

      # 7. Commit e push
      - name: Commit changes
        run: |
          git add ./docker/Dockerfile
          git commit -m "Update Cronicle version to ${{ env.version_number }}"
          git push origin HEAD:main

      # 8. Criar tag
      - name: Create Git tag
        run: |
          git tag "v${{ env.version_number }}"
          git push origin "v${{ env.version_number }}"

      # 9. Criar release no GitHub
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.version_number }}"
          name: "Cronicle ${{ env.version_number }}"
          body: "Atualização automática para a versão ${{ env.version_number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
